{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\andre\\\\Desktop\\\\mydailystatus\\\\pages\\\\app.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport router from 'next/router';\n\nvar App = function App(props) {\n  useEffect(function () {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 5\n    }\n  }, \"Status pr\\xF3ximos a voc\\xEA: \"), __jsx(\"table\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 5\n    }\n  }, props.checkins.map(function (checkin) {\n    return __jsx(\"tr\", {\n      key: checkin.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }\n    }, __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 11\n      }\n    }, checkin.id === props.user.sub && \"Seu Status\"), __jsx(\"td\", {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }\n    }, checkin.distance));\n  })));\n};\n\nexport var __N_SSP = true;\nexport default App;","map":{"version":3,"sources":["C:/Users/andre/Desktop/mydailystatus/pages/app.js"],"names":["React","useEffect","router","App","props","isAuth","push","forceCreate","checkins","map","checkin","id","user","sub","distance"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AAEA,OAAOC,MAAP,MAAmB,aAAnB;;AAIA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD,EAAW;AACrBH,EAAAA,SAAS,CAAC,YAAM;AACd,QAAG,CAACG,KAAK,CAACC,MAAV,EAAiB;AACfH,MAAAA,MAAM,CAACI,IAAP,CAAY,GAAZ;AACD,KAFD,MAEO,IAAIF,KAAK,CAACG,WAAV,EAAsB;AAC3BL,MAAAA,MAAM,CAACI,IAAP,CAAY,gBAAZ;AACD;AACF,GANQ,CAAT;;AAQA,MAAG,CAACF,KAAK,CAACC,MAAP,IAAiBD,KAAK,CAACG,WAA1B,EAAsC;AACpC,WAAO,IAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sCADA,EAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGH,KAAK,CAACI,QAAN,CAAeC,GAAf,CAAmB,UAAAC,OAAO;AAAA,WACzB;AAAI,MAAA,GAAG,EAAEA,OAAO,CAACC,EAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKD,OAAO,CAACC,EAAR,KAAeP,KAAK,CAACQ,IAAN,CAAWC,GAA1B,IAAiC,YAAtC,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAKH,OAAO,CAACI,QAAb,CAFF,CADyB;AAAA,GAA1B,CADH,CAFA,CADF;AAaD,CA1BD;;;AA4BA,eAAeX,GAAf","sourcesContent":["import React, {useEffect} from 'react'\r\nimport auth0 from '../lib/auth0'\r\nimport router from 'next/router'\r\nimport {db} from '../lib/db'\r\nimport {distance} from \"../lib/geo\" \r\n\r\nconst App = (props) => {\r\n  useEffect(() => {\r\n    if(!props.isAuth){\r\n      router.push('/')\r\n    } else if (props.forceCreate){\r\n      router.push('/create-status')\r\n    }\r\n  })\r\n\r\n  if(!props.isAuth || props.forceCreate){\r\n    return null\r\n  }\r\n\r\n  return(\r\n    <div>\r\n    <h1>Status próximos a você: </h1>\r\n    <table>\r\n      {props.checkins.map(checkin => (\r\n        <tr key={checkin.id}>\r\n          <td>{checkin.id === props.user.sub && \"Seu Status\"}</td>\r\n          <td>{checkin.distance}</td>\r\n        </tr>\r\n      ))}\r\n    </table>\r\n  </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\nexport async function getServerSideProps({req, res}) {\r\n  const session = await auth0.getSession(req)\r\n  const currentDate = new Date().toISOString().substr(0, 10)\r\n  let checkInList = []\r\n  let props = {user: {}, isAuth: false, forceCreate: false, checkins: []}\r\n  if (session) {\r\n    const {user} = session\r\n    const todaysCheckin = await db\r\n      .collection(\"markers\")\r\n      .doc(currentDate)\r\n      .collection(\"checks\")\r\n      .doc(user.sub)\r\n      .get()\r\n\r\n    const {coordinates} = todaysCheckin.data()\r\n    let forceCreate = true\r\n\r\n    if (coordinates) {\r\n      forceCreate = false\r\n      const {docs} = await db\r\n        .collection(\"markers\")\r\n        .doc(currentDate)\r\n        .collection(\"checks\")\r\n        .near({\r\n          center: coordinates,\r\n          radius: 18000,\r\n        })\r\n        .get()\r\n\r\n      checkInList = docs.map(doc => {\r\n        const {status, coordinates} = doc.data()\r\n        const {latitude, longitude} = coordinates\r\n        const {latitude: lat, longitude: long} = coordinates\r\n\r\n        return {\r\n          id: doc.id,\r\n          status,\r\n          coords: {latitude, longitude},\r\n          distance: distance(lat, long, latitude, longitude).toFixed(2),\r\n        }\r\n      })\r\n    }\r\n    props = {user, isAuth: true, forceCreate, checkins: checkInList}\r\n  }\r\n  return { props }\r\n}"]},"metadata":{},"sourceType":"module"}