{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\Desktop\\\\mydailystatus\\\\pages\\\\app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\n\nconst App = props => {\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"App\"), __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, JSON.stringify(props, null, 2)));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n  const currentDate = new Date().toISOString().substr(0, 10);\n  let checkInList = [];\n  let props = {\n    user: {},\n    isAuth: false,\n    forceCreate: false,\n    checkins: []\n  };\n\n  if (session) {\n    const {\n      user\n    } = session;\n    const todaysCheckin = await db.collection(\"markers\").doc(currentDate).collection(\"checks\").doc(user.sub).get();\n    const {\n      coordinates\n    } = todaysCheckin.data();\n    let forceCreate = true;\n\n    if (coordinates) {\n      forceCreate = false;\n      const {\n        docs\n      } = await db.collection(\"markers\").doc(currentDate).collection(\"checks\").near({\n        center: coordinates,\n        radius: 18000\n      }).get();\n      checkInList = docs.map(doc => {\n        const {\n          status,\n          coordinates\n        } = doc.data();\n        const {\n          latitude,\n          longitude\n        } = coordinates;\n        const {\n          latitude: lat,\n          longitude: long\n        } = coordinates;\n        return {\n          id: doc.id,\n          status,\n          coords: {\n            latitude,\n            longitude\n          },\n          distance: distance(lat, long, latitude, longitude)\n        };\n      });\n    }\n\n    props = {\n      user,\n      isAuth: true,\n      forceCreate,\n      checkins: checkInList\n    };\n  }\n\n  return {\n    props\n  };\n}","map":{"version":3,"sources":["C:/Users/andre/Desktop/mydailystatus/pages/app.js"],"names":["React","useEffect","auth0","router","db","App","props","isAuth","push","forceCreate","JSON","stringify","getServerSideProps","req","res","session","getSession","currentDate","Date","toISOString","substr","checkInList","user","checkins","todaysCheckin","collection","doc","sub","get","coordinates","data","docs","near","center","radius","map","status","latitude","longitude","lat","long","id","coords","distance"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAAQC,EAAR,QAAiB,WAAjB;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACrBL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAG,CAACK,KAAK,CAACC,MAAV,EAAiB;AACfJ,MAAAA,MAAM,CAACK,IAAP,CAAY,GAAZ;AACD,KAFD,MAEO,IAAIF,KAAK,CAACG,WAAV,EAAsB;AAC3BN,MAAAA,MAAM,CAACK,IAAP,CAAY,gBAAZ;AACD;AACF,GANQ,CAAT;;AAQA,MAAG,CAACF,KAAK,CAACC,MAAP,IAAiBD,KAAK,CAACG,WAA1B,EAAsC;AACpC,WAAO,IAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,IAAI,CAACC,SAAL,CAAeL,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAN,CAFF,CADF;AAMD,CAnBD;;AAqBA,eAAeD,GAAf;AAEA,OAAO,eAAeO,kBAAf,CAAkC;AAACC,EAAAA,GAAD;AAAMC,EAAAA;AAAN,CAAlC,EAA8C;AACnD,QAAMC,OAAO,GAAG,MAAMb,KAAK,CAACc,UAAN,CAAiBH,GAAjB,CAAtB;AACA,QAAMI,WAAW,GAAG,IAAIC,IAAJ,GAAWC,WAAX,GAAyBC,MAAzB,CAAgC,CAAhC,EAAmC,EAAnC,CAApB;AACA,MAAIC,WAAW,GAAG,EAAlB;AACA,MAAIf,KAAK,GAAG;AAACgB,IAAAA,IAAI,EAAE,EAAP;AAAWf,IAAAA,MAAM,EAAE,KAAnB;AAA0BE,IAAAA,WAAW,EAAE,KAAvC;AAA8Cc,IAAAA,QAAQ,EAAE;AAAxD,GAAZ;;AACA,MAAIR,OAAJ,EAAa;AACX,UAAM;AAACO,MAAAA;AAAD,QAASP,OAAf;AACA,UAAMS,aAAa,GAAG,MAAMpB,EAAE,CAC3BqB,UADyB,CACd,SADc,EAEzBC,GAFyB,CAErBT,WAFqB,EAGzBQ,UAHyB,CAGd,QAHc,EAIzBC,GAJyB,CAIrBJ,IAAI,CAACK,GAJgB,EAKzBC,GALyB,EAA5B;AAOA,UAAM;AAACC,MAAAA;AAAD,QAAgBL,aAAa,CAACM,IAAd,EAAtB;AACA,QAAIrB,WAAW,GAAG,IAAlB;;AAEA,QAAIoB,WAAJ,EAAiB;AACfpB,MAAAA,WAAW,GAAG,KAAd;AACA,YAAM;AAACsB,QAAAA;AAAD,UAAS,MAAM3B,EAAE,CACpBqB,UADkB,CACP,SADO,EAElBC,GAFkB,CAEdT,WAFc,EAGlBQ,UAHkB,CAGP,QAHO,EAIlBO,IAJkB,CAIb;AACJC,QAAAA,MAAM,EAAEJ,WADJ;AAEJK,QAAAA,MAAM,EAAE;AAFJ,OAJa,EAQlBN,GARkB,EAArB;AAUAP,MAAAA,WAAW,GAAGU,IAAI,CAACI,GAAL,CAAST,GAAG,IAAI;AAC5B,cAAM;AAACU,UAAAA,MAAD;AAASP,UAAAA;AAAT,YAAwBH,GAAG,CAACI,IAAJ,EAA9B;AACA,cAAM;AAACO,UAAAA,QAAD;AAAWC,UAAAA;AAAX,YAAwBT,WAA9B;AACA,cAAM;AAACQ,UAAAA,QAAQ,EAAEE,GAAX;AAAgBD,UAAAA,SAAS,EAAEE;AAA3B,YAAmCX,WAAzC;AAEA,eAAO;AACLY,UAAAA,EAAE,EAAEf,GAAG,CAACe,EADH;AAELL,UAAAA,MAFK;AAGLM,UAAAA,MAAM,EAAE;AAACL,YAAAA,QAAD;AAAWC,YAAAA;AAAX,WAHH;AAILK,UAAAA,QAAQ,EAAEA,QAAQ,CAACJ,GAAD,EAAMC,IAAN,EAAYH,QAAZ,EAAsBC,SAAtB;AAJb,SAAP;AAMD,OAXa,CAAd;AAYD;;AACDhC,IAAAA,KAAK,GAAG;AAACgB,MAAAA,IAAD;AAAOf,MAAAA,MAAM,EAAE,IAAf;AAAqBE,MAAAA,WAArB;AAAkCc,MAAAA,QAAQ,EAAEF;AAA5C,KAAR;AACD;;AACD,SAAO;AAAEf,IAAAA;AAAF,GAAP;AACD","sourcesContent":["import React, {useEffect} from 'react'\r\nimport auth0 from '../lib/auth0'\r\nimport router from 'next/router'\r\nimport {db} from '../lib/db'\r\n\r\nconst App = (props) => {\r\n  useEffect(() => {\r\n    if(!props.isAuth){\r\n      router.push('/')\r\n    } else if (props.forceCreate){\r\n      router.push('/create-status')\r\n    }\r\n  })\r\n\r\n  if(!props.isAuth || props.forceCreate){\r\n    return null\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <h1>App</h1>\r\n      <pre>{JSON.stringify(props, null, 2)}</pre>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\nexport async function getServerSideProps({req, res}) {\r\n  const session = await auth0.getSession(req)\r\n  const currentDate = new Date().toISOString().substr(0, 10)\r\n  let checkInList = []\r\n  let props = {user: {}, isAuth: false, forceCreate: false, checkins: []}\r\n  if (session) {\r\n    const {user} = session\r\n    const todaysCheckin = await db\r\n      .collection(\"markers\")\r\n      .doc(currentDate)\r\n      .collection(\"checks\")\r\n      .doc(user.sub)\r\n      .get()\r\n\r\n    const {coordinates} = todaysCheckin.data()\r\n    let forceCreate = true\r\n\r\n    if (coordinates) {\r\n      forceCreate = false\r\n      const {docs} = await db\r\n        .collection(\"markers\")\r\n        .doc(currentDate)\r\n        .collection(\"checks\")\r\n        .near({\r\n          center: coordinates,\r\n          radius: 18000,\r\n        })\r\n        .get()\r\n\r\n      checkInList = docs.map(doc => {\r\n        const {status, coordinates} = doc.data()\r\n        const {latitude, longitude} = coordinates\r\n        const {latitude: lat, longitude: long} = coordinates\r\n\r\n        return {\r\n          id: doc.id,\r\n          status,\r\n          coords: {latitude, longitude},\r\n          distance: distance(lat, long, latitude, longitude),\r\n        }\r\n      })\r\n    }\r\n    props = {user, isAuth: true, forceCreate, checkins: checkInList}\r\n  }\r\n  return { props }\r\n}"]},"metadata":{},"sourceType":"module"}