{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\andre\\\\Desktop\\\\mydailystatus\\\\pages\\\\app.js\";\n\nvar __jsx = React.createElement;\nimport React, { Component, Fragment, useEffect } from 'react';\nimport isEmpty from 'lodash.isempty';\nimport router from \"next/router\";\nimport GoogleMapReact from 'google-map-react';\n\nfunction createMapOptions(maps) {\n  return {\n    zoomControlOptions: {\n      position: maps.ControlPosition.RIGHT_CENTER,\n      style: maps.ZoomControlStyle.SMALL\n    },\n    mapTypeControlOptions: {\n      position: maps.ControlPosition.TOP_RIGHT\n    },\n    mapTypeControl: true\n  };\n}\n\nvar App = function App(props) {\n  useEffect(function () {\n    if (!props.isAuth) router.push(\"/\");else if (props.forceCreate) router.push(\"/create-status\");\n  });\n  var defaultProps = {\n    center: [props.user.latitude, props.user.longitude],\n    zoom: 9\n  };\n  if (!props.isAuth || props.forceCreate) return null;\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    className: \"font-bold text-4xl py-8\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Status pr\\xF3ximos a voc\\xEA:\"), __jsx(GoogleMapReact, {\n    defaultCenter: defaultProps.center,\n    yesIWantToUseGoogleMapApiInternals: true,\n    options: createMapOptions,\n    zoom: defaultProps.zoom,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, props.checkins.map(function (checkin) {\n    return __jsx(MyGreatPlace, {\n      key: checkin.id,\n      lat: checkin.coords.latitude,\n      lng: checkin.coords.longitude,\n      text: checkin.status,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }\n    });\n  })));\n};\n\nexport var __N_SSP = true;\nexport default App;","map":{"version":3,"sources":["C:/Users/andre/Desktop/mydailystatus/pages/app.js"],"names":["React","Component","Fragment","useEffect","isEmpty","router","GoogleMapReact","createMapOptions","maps","zoomControlOptions","position","ControlPosition","RIGHT_CENTER","style","ZoomControlStyle","SMALL","mapTypeControlOptions","TOP_RIGHT","mapTypeControl","App","props","isAuth","push","forceCreate","defaultProps","center","user","latitude","longitude","zoom","checkins","map","checkin","id","coords","status"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,SAArC,QAAsD,OAAtD;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAGA,OAAOC,cAAP,MAA2B,kBAA3B;;AACA,SAASC,gBAAT,CAA0BC,IAA1B,EAAgC;AAC9B,SAAO;AACLC,IAAAA,kBAAkB,EAAE;AAClBC,MAAAA,QAAQ,EAAEF,IAAI,CAACG,eAAL,CAAqBC,YADb;AAElBC,MAAAA,KAAK,EAAEL,IAAI,CAACM,gBAAL,CAAsBC;AAFX,KADf;AAKLC,IAAAA,qBAAqB,EAAE;AACrBN,MAAAA,QAAQ,EAAEF,IAAI,CAACG,eAAL,CAAqBM;AADV,KALlB;AAQLC,IAAAA,cAAc,EAAE;AARX,GAAP;AAUD;;AAED,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,KAAD,EAAW;AACrBjB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACiB,KAAK,CAACC,MAAX,EAAmBhB,MAAM,CAACiB,IAAP,CAAY,GAAZ,EAAnB,KACK,IAAIF,KAAK,CAACG,WAAV,EAAuBlB,MAAM,CAACiB,IAAP,CAAY,gBAAZ;AAC7B,GAHQ,CAAT;AAKA,MAAME,YAAY,GAAG;AACnBC,IAAAA,MAAM,EAAE,CAACL,KAAK,CAACM,IAAN,CAAWC,QAAZ,EAAsBP,KAAK,CAACM,IAAN,CAAWE,SAAjC,CADW;AAEnBC,IAAAA,IAAI,EAAE;AAFa,GAArB;AAKA,MAAI,CAACT,KAAK,CAACC,MAAP,IAAiBD,KAAK,CAACG,WAA3B,EAAwC,OAAO,IAAP;AACxC,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,SAAS,EAAC,yBAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCADF,EAGE,MAAC,cAAD;AACE,IAAA,aAAa,EAAEC,YAAY,CAACC,MAD9B;AAEE,IAAA,kCAAkC,MAFpC;AAGE,IAAA,OAAO,EAAElB,gBAHX;AAIE,IAAA,IAAI,EAAEiB,YAAY,CAACK,IAJrB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAMKT,KAAK,CAACU,QAAN,CAAeC,GAAf,CAAmB,UAACC,OAAD;AAAA,WAClB,MAAC,YAAD;AACE,MAAA,GAAG,EAAEA,OAAO,CAACC,EADf;AAEE,MAAA,GAAG,EAAED,OAAO,CAACE,MAAR,CAAeP,QAFtB;AAGE,MAAA,GAAG,EAAEK,OAAO,CAACE,MAAR,CAAeN,SAHtB;AAIE,MAAA,IAAI,EAAEI,OAAO,CAACG,MAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADkB;AAAA,GAAnB,CANL,CAHF,CADF;AAqBD,CAjCD;;;AAmCA,eAAehB,GAAf","sourcesContent":["import React, { Component, Fragment, useEffect } from 'react';\r\nimport isEmpty from 'lodash.isempty';\r\nimport router from \"next/router\"\r\nimport auth0 from \"../lib/auth0\"\r\nimport { db } from \"../lib/db\"\r\nimport GoogleMapReact from 'google-map-react';\r\nfunction createMapOptions(maps) {\r\n  return {\r\n    zoomControlOptions: {\r\n      position: maps.ControlPosition.RIGHT_CENTER,\r\n      style: maps.ZoomControlStyle.SMALL\r\n    },\r\n    mapTypeControlOptions: {\r\n      position: maps.ControlPosition.TOP_RIGHT\r\n    },\r\n    mapTypeControl: true\r\n  };\r\n}\r\n\r\nconst App = (props) => {\r\n  useEffect(() => {\r\n    if (!props.isAuth) router.push(\"/\")\r\n    else if (props.forceCreate) router.push(\"/create-status\")\r\n  })\r\n\r\n  const defaultProps = {\r\n    center: [props.user.latitude, props.user.longitude],\r\n    zoom: 9,\r\n  };\r\n\r\n  if (!props.isAuth || props.forceCreate) return null\r\n  return (\r\n    <div>\r\n      <h1 className='font-bold text-4xl py-8'>Status próximos a você:</h1>\r\n\r\n      <GoogleMapReact\r\n        defaultCenter={defaultProps.center}\r\n        yesIWantToUseGoogleMapApiInternals\r\n        options={createMapOptions}\r\n        zoom={defaultProps.zoom}\r\n        >\r\n          {props.checkins.map((checkin) => (\r\n            <MyGreatPlace\r\n              key={checkin.id}\r\n              lat={checkin.coords.latitude}\r\n              lng={checkin.coords.longitude}\r\n              text={checkin.status}\r\n            />\r\n          ))}\r\n      </GoogleMapReact>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\nexport async function getServerSideProps({ req, res }) {\r\n  const session = await auth0.getSession(req)\r\n  const currentDate = new Date().toISOString().substr(0, 10)\r\n  let checkinsList = []\r\n  let props = { user: {}, isAuth: false, forceCreate: false, checkins: [] }\r\n  if (session) {\r\n    const { user } = session\r\n    const todaysCheckin = await db\r\n      .collection(\"markers\")\r\n      .doc(currentDate)\r\n      .collection(\"checks\")\r\n      .doc(user.sub)\r\n      .get()\r\n    \r\n    let forceCreate = true\r\n\r\n    if (todaysCheckin.data()) {\r\n      const { coordinates } = todaysCheckin.data()\r\n      forceCreate = false\r\n      const { docs } = await db\r\n        .collection(\"markers\")\r\n        .doc(currentDate)\r\n        .collection(\"checks\")\r\n        .near({\r\n          center: coordinates,\r\n          radius: 18000,\r\n        })\r\n        .get()\r\n\r\n      checkinsList = docs.map((doc) => {\r\n        const { status, coordinates } = doc.data()\r\n        const { latitude, longitude } = coordinates \r\n\r\n        return {\r\n          id: doc.id,\r\n          status,\r\n          coords: { latitude, longitude },\r\n        }\r\n      })\r\n    }\r\n    props = { user, isAuth: true, forceCreate, checkins: checkinsList }\r\n  }\r\n  return { props }\r\n}"]},"metadata":{},"sourceType":"module"}