{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\Desktop\\\\mydailystatus\\\\pages\\\\app.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { db } from '../lib/db';\n\nconst App = props => {\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }\n  }, \"App\"), __jsx(\"pre\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }\n  }, JSON.stringify(props, null, 2)));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n  const currentDate = new Date().toISOString().substr(0, 10);\n\n  if (session) {\n    const todaysCheckIn = await db.collection('markers').doc(currentDate).collection('checks').doc(session.user.sub).get();\n    const todaysData = todaysCheckIn.data();\n    let forceCreate = true;\n\n    if (todaysData) {\n      forceCreate = false;\n    }\n\n    return {\n      props: {\n        isAuth: true,\n        user: session.user,\n        forceCreate\n      }\n    };\n  }\n\n  return {\n    props: {\n      isAuth: false,\n      user: {}\n    }\n  };\n}","map":{"version":3,"sources":["C:/Users/andre/Desktop/mydailystatus/pages/app.js"],"names":["React","useEffect","auth0","router","db","App","props","isAuth","push","forceCreate","JSON","stringify","getServerSideProps","req","res","session","getSession","currentDate","Date","toISOString","substr","todaysCheckIn","collection","doc","user","sub","get","todaysData","data"],"mappings":";;AAAA,OAAOA,KAAP,IAAeC,SAAf,QAA+B,OAA/B;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AACA,SAAQC,EAAR,QAAiB,WAAjB;;AAEA,MAAMC,GAAG,GAAIC,KAAD,IAAW;AACrBL,EAAAA,SAAS,CAAC,MAAM;AACd,QAAG,CAACK,KAAK,CAACC,MAAV,EAAiB;AACfJ,MAAAA,MAAM,CAACK,IAAP,CAAY,GAAZ;AACD,KAFD,MAEO,IAAIF,KAAK,CAACG,WAAV,EAAsB;AAC3BN,MAAAA,MAAM,CAACK,IAAP,CAAY,gBAAZ;AACD;AACF,GANQ,CAAT;;AAQA,MAAG,CAACF,KAAK,CAACC,MAAP,IAAiBD,KAAK,CAACG,WAA1B,EAAsC;AACpC,WAAO,IAAP;AACD;;AAED,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,IAAI,CAACC,SAAL,CAAeL,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAN,CAFF,CADF;AAMD,CAnBD;;AAqBA,eAAeD,GAAf;AAEA,OAAO,eAAeO,kBAAf,CAAkC;AAACC,EAAAA,GAAD;AAAMC,EAAAA;AAAN,CAAlC,EAA6C;AAClD,QAAMC,OAAO,GAAG,MAAMb,KAAK,CAACc,UAAN,CAAiBH,GAAjB,CAAtB;AACA,QAAMI,WAAW,GAAG,IAAIC,IAAJ,GAAWC,WAAX,GAAyBC,MAAzB,CAAgC,CAAhC,EAAmC,EAAnC,CAApB;;AACA,MAAIL,OAAJ,EAAY;AACV,UAAMM,aAAa,GAAG,MAAMjB,EAAE,CACCkB,UADH,CACc,SADd,EAEGC,GAFH,CAEON,WAFP,EAGGK,UAHH,CAGc,QAHd,EAIGC,GAJH,CAIOR,OAAO,CAACS,IAAR,CAAaC,GAJpB,EAKGC,GALH,EAA5B;AAOA,UAAMC,UAAU,GAAGN,aAAa,CAACO,IAAd,EAAnB;AAEA,QAAInB,WAAW,GAAG,IAAlB;;AAEA,QAAGkB,UAAH,EAAc;AACZlB,MAAAA,WAAW,GAAG,KAAd;AAED;;AAED,WAAM;AACJH,MAAAA,KAAK,EAAC;AACJC,QAAAA,MAAM,EAAE,IADJ;AAEJiB,QAAAA,IAAI,EAAET,OAAO,CAACS,IAFV;AAGJf,QAAAA;AAHI;AADF,KAAN;AAOD;;AAED,SAAM;AACJH,IAAAA,KAAK,EAAC;AACJC,MAAAA,MAAM,EAAE,KADJ;AAEJiB,MAAAA,IAAI,EAAC;AAFD;AADF,GAAN;AAOD","sourcesContent":["import React, {useEffect} from 'react'\r\nimport auth0 from '../lib/auth0'\r\nimport router from 'next/router'\r\nimport {db} from '../lib/db'\r\n\r\nconst App = (props) => {\r\n  useEffect(() => {\r\n    if(!props.isAuth){\r\n      router.push('/')\r\n    } else if (props.forceCreate){\r\n      router.push('/create-status')\r\n    }\r\n  })\r\n\r\n  if(!props.isAuth || props.forceCreate){\r\n    return null\r\n  }\r\n\r\n  return(\r\n    <div>\r\n      <h1>App</h1>\r\n      <pre>{JSON.stringify(props, null, 2)}</pre>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\nexport async function getServerSideProps({req, res}){\r\n  const session = await auth0.getSession(req)\r\n  const currentDate = new Date().toISOString().substr(0, 10);\r\n  if (session){\r\n    const todaysCheckIn = await db\r\n                                  .collection('markers')\r\n                                  .doc(currentDate)\r\n                                  .collection('checks')\r\n                                  .doc(session.user.sub)\r\n                                  .get()\r\n    \r\n    const todaysData = todaysCheckIn.data()\r\n\r\n    let forceCreate = true\r\n    \r\n    if(todaysData){\r\n      forceCreate = false\r\n\r\n    }\r\n\r\n    return{\r\n      props:{\r\n        isAuth: true,\r\n        user: session.user,\r\n        forceCreate\r\n      }\r\n    }\r\n  } \r\n\r\n  return{\r\n    props:{\r\n      isAuth: false,\r\n      user:{}\r\n    }\r\n  }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}