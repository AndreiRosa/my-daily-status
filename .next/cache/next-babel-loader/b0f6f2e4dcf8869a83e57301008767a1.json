{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\andre\\\\Desktop\\\\mydailystatus\\\\pages\\\\app.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useEffect } from \"react\";\nimport router from \"next/router\";\nimport auth0 from \"../lib/auth0\";\nimport { db } from \"../lib/db\";\nimport { distance } from \"../lib/geo\";\n\nconst App = props => {\n  useEffect(() => {\n    if (!props.isAuth) router.push(\"/\");else if (props.forceCreate) router.push(\"/create-status\");\n  });\n  if (!props.isAuth || props.forceCreate) return null;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }, \"App\"), __jsx(\"table\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, props.checkins.map(checkin => __jsx(\"tr\", {\n    key: checkin.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 13\n    }\n  }, checkin.id === props.user.sub && \"Seus Status\"), __jsx(\"td\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }\n  }, checkin.distance)))));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n  const currentDate = new Date().toISOString().substr(0, 10);\n  let checkinsList = [];\n  let props = {\n    user: {},\n    isAuth: false,\n    forceCreate: false,\n    checkins: []\n  };\n\n  if (session) {\n    const {\n      user\n    } = session;\n    const todaysCheckin = await db.collection(\"markers\").doc(currentDate).collection(\"checks\").doc(user.sub).get();\n    let forceCreate = true;\n\n    if (todaysCheckin.data) {\n      const {\n        coordinates\n      } = todaysCheckin.data();\n      forceCreate = false;\n      const {\n        docs\n      } = await db.collection(\"markers\").doc(currentDate).collection(\"checks\").near({\n        center: coordinates,\n        radius: 18000\n      }).get();\n      checkinsList = docs.map(doc => {\n        const {\n          status,\n          coordinates\n        } = doc.data();\n        const {\n          latitude,\n          longitude\n        } = coordinates;\n        const {\n          latitude: lat,\n          longitude: long\n        } = coordinates;\n        return {\n          id: doc.id,\n          status,\n          coords: {\n            latitude,\n            longitude\n          },\n          distance: distance(lat, long, latitude, longitude)\n        };\n      });\n    }\n\n    props = {\n      user,\n      isAuth: true,\n      forceCreate,\n      checkins: checkinsList\n    };\n  }\n\n  return {\n    props\n  };\n}","map":{"version":3,"sources":["C:/Users/andre/Desktop/mydailystatus/pages/app.js"],"names":["useEffect","router","auth0","db","distance","App","props","isAuth","push","forceCreate","checkins","map","checkin","id","user","sub","getServerSideProps","req","res","session","getSession","currentDate","Date","toISOString","substr","checkinsList","todaysCheckin","collection","doc","get","data","coordinates","docs","near","center","radius","status","latitude","longitude","lat","long","coords"],"mappings":"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","sourcesContent":["import { useEffect } from \"react\";\r\nimport router from \"next/router\";\r\nimport auth0 from \"../lib/auth0\";\r\nimport { db } from \"../lib/db\";\r\nimport { distance } from \"../lib/geo\";\r\n\r\nconst App = (props) => {\r\n  useEffect(() => {\r\n    if (!props.isAuth) router.push(\"/\");\r\n    else if (props.forceCreate) router.push(\"/create-status\");\r\n  });\r\n\r\n  if (!props.isAuth || props.forceCreate) return null;\r\n  return (\r\n    <div>\r\n      <h1>App</h1>\r\n      <table>\r\n        {props.checkins.map((checkin) => (\r\n          <tr key={checkin.id}>\r\n            <td>{checkin.id === props.user.sub && \"Seus Status\"}</td>\r\n            <td>{checkin.distance}</td>\r\n          </tr>\r\n        ))}\r\n      </table>\r\n      {/* <pre>{JSON.stringify(props, null, 2)}</pre> */}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n\r\nexport async function getServerSideProps({ req, res }) {\r\n  const session = await auth0.getSession(req);\r\n  const currentDate = new Date().toISOString().substr(0, 10);\r\n  let checkinsList = [];\r\n  let props = { user: {}, isAuth: false, forceCreate: false, checkins: [] };\r\n  if (session) {\r\n    const { user } = session;\r\n    const todaysCheckin = await db\r\n      .collection(\"markers\")\r\n      .doc(currentDate)\r\n      .collection(\"checks\")\r\n      .doc(user.sub)\r\n      .get();\r\n\r\n    \r\n    let forceCreate = true;\r\n\r\n    if (todaysCheckin.data) {\r\n      const { coordinates } = todaysCheckin.data();\r\n      forceCreate = false;\r\n      const { docs } = await db\r\n        .collection(\"markers\")\r\n        .doc(currentDate)\r\n        .collection(\"checks\")\r\n        .near({\r\n          center: coordinates,\r\n          radius: 18000,\r\n        })\r\n        .get();\r\n\r\n      checkinsList = docs.map((doc) => {\r\n        const { status, coordinates } = doc.data();\r\n        const { latitude, longitude } = coordinates;\r\n        const { latitude: lat, longitude: long } = coordinates;\r\n\r\n        return {\r\n          id: doc.id,\r\n          status,\r\n          coords: { latitude, longitude },\r\n          distance: distance(lat, long, latitude, longitude),\r\n        };\r\n      });\r\n    }\r\n    props = { user, isAuth: true, forceCreate, checkins: checkinsList };\r\n  }\r\n  return { props };\r\n}"]},"metadata":{},"sourceType":"module"}