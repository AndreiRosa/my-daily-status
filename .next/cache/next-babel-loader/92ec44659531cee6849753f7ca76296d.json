{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"C:\\\\Users\\\\andre\\\\Desktop\\\\mydailystatus\\\\pages\\\\app.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport Marker from '../components/Marker';\nimport GoogleMap from '../components/GoogleMap';\nimport router from \"next/router\";\n\nvar getMapBounds = function getMapBounds(map, maps, places) {\n  var bounds = new maps.LatLngBounds();\n  places.forEach(function (place) {\n    bounds.extend(new maps.LatLng(place.geometry.location.lat, place.geometry.location.lng));\n  });\n  return bounds;\n};\n\nvar bindResizeListener = function bindResizeListener(map, maps, bounds) {\n  maps.event.addDomListenerOnce(map, 'idle', function () {\n    maps.event.addDomListener(window, 'resize', function () {\n      map.fitBounds(bounds);\n    });\n  });\n};\n\nvar apiIsLoaded = function apiIsLoaded(map, maps, places) {\n  var bounds = getMapBounds(map, maps, places);\n  map.fitBounds(bounds);\n  bindResizeListener(map, maps, bounds);\n};\n\nvar App = function App(props) {\n  useEffect(function () {\n    if (!props.isAuth) router.push(\"/\");else if (props.forceCreate) router.push(\"/create-status\");\n  });\n  var defaultProps = {\n    center: [props.user.latitude, props.user.longitude]\n  };\n  if (!props.isAuth || props.forceCreate) return null;\n  return __jsx(\"div\", {\n    style: {\n      height: '100vh',\n      width: '100%'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 5\n    }\n  }, __jsx(GoogleMap, {\n    defaultCenter: defaultProps.center,\n    yesIWantToUseGoogleMapApiInternals: true,\n    defaultZoom: 10,\n    onGoogleApiLoaded: function onGoogleApiLoaded(_ref) {\n      var map = _ref.map,\n          maps = _ref.maps;\n      return apiIsLoaded(map, maps, props.checkins);\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 9\n    }\n  }, props.checkins.map(function (checkin) {\n    return __jsx(Marker, {\n      key: checkin.id,\n      lat: checkin.coords.latitude,\n      lng: checkin.coords.longitude,\n      text: checkin.status,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }\n    });\n  })));\n};\n\nexport var __N_SSP = true;\nexport default App;","map":{"version":3,"sources":["C:/Users/andre/Desktop/mydailystatus/pages/app.js"],"names":["React","useEffect","Marker","GoogleMap","router","getMapBounds","map","maps","places","bounds","LatLngBounds","forEach","place","extend","LatLng","geometry","location","lat","lng","bindResizeListener","event","addDomListenerOnce","addDomListener","window","fitBounds","apiIsLoaded","App","props","isAuth","push","forceCreate","defaultProps","center","user","latitude","longitude","height","width","checkins","checkin","id","coords","status"],"mappings":"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","sourcesContent":["import React, {useEffect } from 'react'\r\nimport Marker from '../components/Marker';\r\nimport GoogleMap from '../components/GoogleMap';\r\nimport router from \"next/router\"\r\nimport auth0 from \"../lib/auth0\"\r\nimport { db } from \"../lib/db\"\r\n\r\nconst getMapBounds = (map, maps, places) => {\r\n  const bounds = new maps.LatLngBounds();\r\n  places.forEach((place) => {\r\n    bounds.extend(new maps.LatLng(\r\n      place.geometry.location.lat,\r\n      place.geometry.location.lng,\r\n    ));\r\n  });\r\n  return bounds;\r\n};\r\n\r\nconst bindResizeListener = (map, maps, bounds) => {\r\n  maps.event.addDomListenerOnce(map, 'idle', () => {\r\n    maps.event.addDomListener(window, 'resize', () => {\r\n      map.fitBounds(bounds);\r\n    });\r\n  });\r\n};\r\n\r\nconst apiIsLoaded = (map, maps, places) => {\r\n  const bounds = getMapBounds(map, maps, places);\r\n  map.fitBounds(bounds);\r\n  bindResizeListener(map, maps, bounds);\r\n};\r\n\r\nconst App = (props) => {\r\n  useEffect(() => {\r\n    if (!props.isAuth) router.push(\"/\")\r\n    else if (props.forceCreate) router.push(\"/create-status\")\r\n  })\r\n\r\n  const defaultProps = {\r\n    center: [props.user.latitude, props.user.longitude]\r\n  }\r\n\r\n  if (!props.isAuth || props.forceCreate) return null\r\n  \r\n  return (\r\n    <div style={{ height: '100vh', width: '100%' }}>\r\n        <GoogleMap\r\n        defaultCenter={defaultProps.center}\r\n        yesIWantToUseGoogleMapApiInternals\r\n        defaultZoom={10}\r\n        onGoogleApiLoaded={({ map, maps }) => apiIsLoaded(map, maps, props.checkins)}\r\n        >\r\n          {props.checkins.map((checkin) => (\r\n            <Marker\r\n              key={checkin.id}\r\n              lat={checkin.coords.latitude}\r\n              lng={checkin.coords.longitude}\r\n              text={checkin.status}\r\n            />\r\n          ))}\r\n        </GoogleMap>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n\r\nexport async function getServerSideProps({ req, res }) {\r\n  const session = await auth0.getSession(req)\r\n  const currentDate = new Date().toISOString().substr(0, 10)\r\n  let checkinsList = []\r\n  let props = { user: {}, isAuth: false, forceCreate: false, checkins: [] }\r\n  if (session) {\r\n    const { user } = session\r\n    const todaysCheckin = await db\r\n      .collection(\"markers\")\r\n      .doc(currentDate)\r\n      .collection(\"checks\")\r\n      .doc(user.sub)\r\n      .get()\r\n    \r\n    let forceCreate = true\r\n\r\n    if (todaysCheckin.data()) {\r\n      const { coordinates } = todaysCheckin.data()\r\n      forceCreate = false\r\n      const { docs } = await db\r\n        .collection(\"markers\")\r\n        .doc(currentDate)\r\n        .collection(\"checks\")\r\n        .near({\r\n          center: coordinates,\r\n          radius: 18000,\r\n        })\r\n        .get()\r\n\r\n      checkinsList = docs.map((doc) => {\r\n        const { status, coordinates } = doc.data()\r\n        const { latitude, longitude } = coordinates \r\n\r\n        return {\r\n          id: doc.id,\r\n          status,\r\n          coords: { latitude, longitude },\r\n        }\r\n      })\r\n    }\r\n    props = { user, isAuth: true, forceCreate, checkins: checkinsList }\r\n  }\r\n  return { props }\r\n}"]},"metadata":{},"sourceType":"module"}